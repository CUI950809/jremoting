<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="jsonSerializer" class="com.github.jremoting.serializer.JsonSerializer" ></bean>
	<bean id="hessianSerializer" class="com.github.jremoting.serializer.HessianSerializer" ></bean>

	<bean id="serilizers" class="com.github.jremoting.serializer.Serializers">
		<constructor-arg>
			<array>
				<ref bean="jsonSerializer"/>
				<ref bean="hessianSerializer"/>
			</array>
		</constructor-arg>
	</bean>
	
	<bean id="jremotingProtocal" class="com.github.jremoting.protocal.JRemotingProtocal">
		<constructor-arg><ref bean="serilizers"/></constructor-arg>
	</bean>
	
	<bean id="protocals" class="com.github.jremoting.protocal.Protocals">
		<constructor-arg>
			<array>
				<ref bean="jremotingProtocal"/>
			</array>
		</constructor-arg>
	</bean>
	
	<bean id="eventLoopGroup" class="io.netty.channel.nio.NioEventLoopGroup"></bean>

	<bean id="clientDispatcher" class="com.github.jremoting.dispatcher.JRemotingClientDispatcher">
		<constructor-arg>
			<ref bean="eventLoopGroup" />
		</constructor-arg>
	</bean>
	
	<bean id="clientPipeline" class="com.github.jremoting.core.DefaultInvokePipeLine">
		<constructor-arg>
			<array>
				<ref bean="clientDispatcher"/>
			</array>
		</constructor-arg>
	</bean>
	
	<bean id="serverInvoker" class="com.github.jremoting.core.ServerInvoker"></bean>
	
	<bean id="serverPipeline" class="com.github.jremoting.core.DefaultInvokePipeLine">
		<constructor-arg>
			<array>
				<ref bean="serverInvoker"/>
			</array>
		</constructor-arg>
	</bean>

	
	
</beans>